name: Run GetAddons.py

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *' # Every 30 minutes

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11] # Test across multiple Python versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-dependencies
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-dependencies

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run GetAddons script
        run: |
          python GetAddons.py || { echo 'GetAddons.py failed'; exit 1; }
        
      - name: Run repo generator script
        run: |
          python _repo_generator.py || { echo '_repo_generator.py failed'; exit 1; }
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update repository - ${GITHUB_RUN_ID}" --allow-empty
          else
            echo "No changes to commit."
          fi

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            **/*.log

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `:warning: Workflow failed! Check the logs for details.`
            });